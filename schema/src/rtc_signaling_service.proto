syntax = "proto3";

import "google/protobuf/empty.proto";

service RtcSignaling {
  // For the Pi client to communicate signaling messages with other peers
  rpc SubscribeOtherPeer(stream RtcSignalingMessage) returns (stream RtcSignalingMessage) {}

  // For the browser to send signaling message
  rpc SendRtcMessage(RtcSignalingMessage) returns (RtcSignalingMessage) {}

  // For the browser to receive push notification of signaling messages
  rpc WebSubscribeOtherPeer(WebSubscribeOtherPeerRequest) returns (stream RtcSignalingMessage) {}
}

message WebSubscribeOtherPeerRequest {
  string client_id = 1;
}

message RtcSignalingMessage {
  message Request {
    string client_id = 1;

    oneof type {
      google.protobuf.Empty create_offer = 10; 
      string answer_offer = 11; 
      google.protobuf.Empty confirm_answer = 12; 
      google.protobuf.Empty noop = 13;
      string ice_candidate = 14;
    }
  }

  message Response {
    string client_id = 1;
    bool error = 2;
  
    oneof type {
      string create_offer = 10; 
      google.protobuf.Empty answer_offer = 11; 
    }
  }

  oneof type {
    Request request = 1;
    Response response = 2;
  }
}

